Function: bench_A: 3 pointers, 0 call sites
  PartialAlias:	i32* %a, i32* %arrayidx
  PartialAlias:	i32* %a, i32* %arrayidx3
  NoAlias:	i32* %arrayidx, i32* %arrayidx3
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i32* %tmp1, i8** %argv
  MayAlias:	i32* %tmp1, i8* %call
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32* %tmp1	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8** %argv	<->  call void @bench_A(i32* %tmp1)
  Both ModRef:  Ptr: i8* %call	<->  call void @bench_A(i32* %tmp1)
  Both ModRef:  Ptr: i32* %tmp1	<->  call void @bench_A(i32* %tmp1)
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #2 <->   call void @bench_A(i32* %tmp1)
  Both ModRef:   call void @bench_A(i32* %tmp1) <->   %call = call noalias i8* @malloc(i64 400) #2
===== Alias Analysis Evaluator Report =====
  6 Total Alias Queries Performed
  2 no alias responses (33.3%)
  2 may alias responses (33.3%)
  2 partial alias responses (33.3%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 33%/33%/33%/0%
  8 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  8 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
Function: bench_B: 3 pointers, 0 call sites
  PartialAlias:	i32* %arrayidx, i32* %v
  PartialAlias:	i32* %arrayidx3, i32* %v
  NoAlias:	i32* %arrayidx, i32* %arrayidx3
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i32* %tmp1, i8** %argv
  MayAlias:	i32* %tmp1, i8* %call
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32* %tmp1	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8** %argv	<->  %call1 = call i32 @bench_B(i32* %tmp1, i32 %argc)
  Both ModRef:  Ptr: i8* %call	<->  %call1 = call i32 @bench_B(i32* %tmp1, i32 %argc)
  Both ModRef:  Ptr: i32* %tmp1	<->  %call1 = call i32 @bench_B(i32* %tmp1, i32 %argc)
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #2 <->   %call1 = call i32 @bench_B(i32* %tmp1, i32 %argc)
  Both ModRef:   %call1 = call i32 @bench_B(i32* %tmp1, i32 %argc) <->   %call = call noalias i8* @malloc(i64 400) #2
===== Alias Analysis Evaluator Report =====
  6 Total Alias Queries Performed
  2 no alias responses (33.3%)
  2 may alias responses (33.3%)
  2 partial alias responses (33.3%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 33%/33%/33%/0%
  8 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  8 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
Function: bench_C: 10 pointers, 0 call sites
  NoAlias:	%struct.array* %src, i32* %src.coerce1
  NoAlias:	i32* %src.coerce1, { i64, i32* }* %tmp
  MustAlias:	%struct.array* %src, { i64, i32* }* %tmp
  NoAlias:	i32* %src.coerce1, i64* %tmp1
  MustAlias:	%struct.array* %src, i64* %tmp1
  MustAlias:	i64* %tmp1, { i64, i32* }* %tmp
  NoAlias:	i32* %src.coerce1, i32** %tmp2
  PartialAlias:	%struct.array* %src, i32** %tmp2
  PartialAlias:	i32** %tmp2, { i64, i32* }* %tmp
  NoAlias:	i32** %tmp2, i64* %tmp1
  NoAlias:	i32* %s, i32* %src.coerce1
  MustAlias:	%struct.array* %src, i32* %s
  MustAlias:	i32* %s, { i64, i32* }* %tmp
  MustAlias:	i32* %s, i64* %tmp1
  NoAlias:	i32* %s, i32** %tmp2
  NoAlias:	i32* %src.coerce1, i32** %v
  PartialAlias:	%struct.array* %src, i32** %v
  PartialAlias:	i32** %v, { i64, i32* }* %tmp
  NoAlias:	i32** %v, i64* %tmp1
  MustAlias:	i32** %tmp2, i32** %v
  NoAlias:	i32* %s, i32** %v
  MayAlias:	i32* %src.coerce1, i32* %tmp4
  NoAlias:	%struct.array* %src, i32* %tmp4
  NoAlias:	i32* %tmp4, { i64, i32* }* %tmp
  NoAlias:	i32* %tmp4, i64* %tmp1
  NoAlias:	i32* %tmp4, i32** %tmp2
  NoAlias:	i32* %s, i32* %tmp4
  NoAlias:	i32* %tmp4, i32** %v
  MayAlias:	i32* %arrayidx, i32* %src.coerce1
  NoAlias:	%struct.array* %src, i32* %arrayidx
  NoAlias:	i32* %arrayidx, { i64, i32* }* %tmp
  NoAlias:	i32* %arrayidx, i64* %tmp1
  NoAlias:	i32* %arrayidx, i32** %tmp2
  NoAlias:	i32* %arrayidx, i32* %s
  NoAlias:	i32* %arrayidx, i32** %v
  PartialAlias:	i32* %arrayidx, i32* %tmp4
  NoAlias:	i32* %acc, i32* %src.coerce1
  PartialAlias:	%struct.array* %src, i32* %acc
  PartialAlias:	i32* %acc, { i64, i32* }* %tmp
  PartialAlias:	i32* %acc, i64* %tmp1
  NoAlias:	i32* %acc, i32** %tmp2
  NoAlias:	i32* %acc, i32* %s
  NoAlias:	i32* %acc, i32** %v
  NoAlias:	i32* %acc, i32* %tmp4
  NoAlias:	i32* %acc, i32* %arrayidx
Function: main: 6 pointers, 1 call sites
  NoAlias:	%struct.array* %y, i8** %argv
  NoAlias:	i8** %argv, { i64, i32* }* %tmp
  MustAlias:	%struct.array* %y, { i64, i32* }* %tmp
  NoAlias:	i64* %tmp1, i8** %argv
  MustAlias:	%struct.array* %y, i64* %tmp1
  MustAlias:	i64* %tmp1, { i64, i32* }* %tmp
  NoAlias:	i32** %tmp3, i8** %argv
  PartialAlias:	%struct.array* %y, i32** %tmp3
  PartialAlias:	i32** %tmp3, { i64, i32* }* %tmp
  NoAlias:	i32** %tmp3, i64* %tmp1
  MayAlias:	i32* %tmp4, i8** %argv
  NoAlias:	%struct.array* %y, i32* %tmp4
  NoAlias:	i32* %tmp4, { i64, i32* }* %tmp
  NoAlias:	i32* %tmp4, i64* %tmp1
  NoAlias:	i32* %tmp4, i32** %tmp3
  Both ModRef:  Ptr: i8** %argv	<->  call void @bench_C(i64 %tmp2, i32* %tmp4)
  NoModRef:  Ptr: %struct.array* %y	<->  call void @bench_C(i64 %tmp2, i32* %tmp4)
  NoModRef:  Ptr: { i64, i32* }* %tmp	<->  call void @bench_C(i64 %tmp2, i32* %tmp4)
  NoModRef:  Ptr: i64* %tmp1	<->  call void @bench_C(i64 %tmp2, i32* %tmp4)
  NoModRef:  Ptr: i32** %tmp3	<->  call void @bench_C(i64 %tmp2, i32* %tmp4)
  Both ModRef:  Ptr: i32* %tmp4	<->  call void @bench_C(i64 %tmp2, i32* %tmp4)
===== Alias Analysis Evaluator Report =====
  60 Total Alias Queries Performed
  37 no alias responses (61.6%)
  3 may alias responses (5.0%)
  10 partial alias responses (16.6%)
  10 must alias responses (16.6%)
  Alias Analysis Evaluator Pointer Alias Summary: 61%/5%/16%/16%
  6 Total ModRef Queries Performed
  4 no mod/ref responses (66.6%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  2 mod & ref responses (33.3%)
  Alias Analysis Evaluator Mod/Ref Summary: 66%/0%/0%/33%
Function: bench_D: 3 pointers, 0 call sites
  MustAlias:	i32* %arrayidx, i32* %v
  PartialAlias:	i32* %arrayidx2, i32* %v
  PartialAlias:	i32* %arrayidx, i32* %arrayidx2
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i32* %tmp1, i8** %argv
  MayAlias:	i32* %tmp1, i8* %call
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32* %tmp1	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8** %argv	<->  call void @bench_D(i32* %tmp1, i32 %argc, i32 100)
  Both ModRef:  Ptr: i8* %call	<->  call void @bench_D(i32* %tmp1, i32 %argc, i32 100)
  Both ModRef:  Ptr: i32* %tmp1	<->  call void @bench_D(i32* %tmp1, i32 %argc, i32 100)
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #2 <->   call void @bench_D(i32* %tmp1, i32 %argc, i32 100)
  Both ModRef:   call void @bench_D(i32* %tmp1, i32 %argc, i32 100) <->   %call = call noalias i8* @malloc(i64 400) #2
===== Alias Analysis Evaluator Report =====
  6 Total Alias Queries Performed
  1 no alias responses (16.6%)
  2 may alias responses (33.3%)
  2 partial alias responses (33.3%)
  1 must alias responses (16.6%)
  Alias Analysis Evaluator Pointer Alias Summary: 16%/33%/33%/16%
  8 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  8 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
Function: bench_E: 3 pointers, 0 call sites
  PartialAlias:	i32* %arrayidx, i32* %v
  PartialAlias:	i32* %arrayidx5, i32* %v
  PartialAlias:	i32* %arrayidx, i32* %arrayidx5
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i32* %tmp1, i8** %argv
  MayAlias:	i32* %tmp1, i8* %call
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32* %tmp1	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8** %argv	<->  %call1 = call i32 @bench_E(i32* %tmp1, i32 %argc)
  Both ModRef:  Ptr: i8* %call	<->  %call1 = call i32 @bench_E(i32* %tmp1, i32 %argc)
  Both ModRef:  Ptr: i32* %tmp1	<->  %call1 = call i32 @bench_E(i32* %tmp1, i32 %argc)
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #2 <->   %call1 = call i32 @bench_E(i32* %tmp1, i32 %argc)
  Both ModRef:   %call1 = call i32 @bench_E(i32* %tmp1, i32 %argc) <->   %call = call noalias i8* @malloc(i64 400) #2
===== Alias Analysis Evaluator Report =====
  6 Total Alias Queries Performed
  1 no alias responses (16.6%)
  2 may alias responses (33.3%)
  3 partial alias responses (50.0%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 16%/33%/50%/0%
  8 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  8 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
Function: bench_F: 7 pointers, 0 call sites
  PartialAlias:	i32* %arrayidx, i32* %v
  PartialAlias:	i32* %arrayidx2, i32* %v
  PartialAlias:	i32* %arrayidx, i32* %arrayidx2
  PartialAlias:	i32* %arrayidx5, i32* %v
  MustAlias:	i32* %arrayidx, i32* %arrayidx5
  PartialAlias:	i32* %arrayidx2, i32* %arrayidx5
  PartialAlias:	i32* %arrayidx7, i32* %v
  PartialAlias:	i32* %arrayidx, i32* %arrayidx7
  MustAlias:	i32* %arrayidx2, i32* %arrayidx7
  PartialAlias:	i32* %arrayidx5, i32* %arrayidx7
  PartialAlias:	i32* %arrayidx9, i32* %v
  MustAlias:	i32* %arrayidx, i32* %arrayidx9
  PartialAlias:	i32* %arrayidx2, i32* %arrayidx9
  MustAlias:	i32* %arrayidx5, i32* %arrayidx9
  PartialAlias:	i32* %arrayidx7, i32* %arrayidx9
  PartialAlias:	i32* %arrayidx11, i32* %v
  PartialAlias:	i32* %arrayidx, i32* %arrayidx11
  MustAlias:	i32* %arrayidx11, i32* %arrayidx2
  PartialAlias:	i32* %arrayidx11, i32* %arrayidx5
  MustAlias:	i32* %arrayidx11, i32* %arrayidx7
  PartialAlias:	i32* %arrayidx11, i32* %arrayidx9
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*), i8** %argv
  NoAlias:	i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*), i8* %call
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 400) #3
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 400) #3
  Both ModRef:  Ptr: i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*)	<->  %call = call noalias i8* @malloc(i64 400) #3
  Both ModRef:  Ptr: i8** %argv	<->  %call1 = call i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*)(i32 %tmp, i32 %argc)
  Both ModRef:  Ptr: i8* %call	<->  %call1 = call i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*)(i32 %tmp, i32 %argc)
  Both ModRef:  Ptr: i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*)	<->  %call1 = call i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*)(i32 %tmp, i32 %argc)
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #3 <->   %call1 = call i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*)(i32 %tmp, i32 %argc)
  Both ModRef:   %call1 = call i32 (i32, i32, ...)* bitcast (i32 (...)* @benc_F to i32 (i32, i32, ...)*)(i32 %tmp, i32 %argc) <->   %call = call noalias i8* @malloc(i64 400) #3
===== Alias Analysis Evaluator Report =====
  24 Total Alias Queries Performed
  2 no alias responses (8.3%)
  1 may alias responses (4.1%)
  15 partial alias responses (62.5%)
  6 must alias responses (25.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 8%/4%/62%/25%
  8 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  8 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
Function: bench_G: 7 pointers, 0 call sites
  NoAlias:	%struct.point* %d, %struct.point* %s
  NoAlias:	%struct.point* %s, i64* %tmp
  MustAlias:	%struct.point* %d, i64* %tmp
  NoAlias:	%struct.point* %s, i32* %x
  MustAlias:	%struct.point* %d, i32* %x
  MustAlias:	i32* %x, i64* %tmp
  MustAlias:	%struct.point* %s, i32* %x1
  NoAlias:	%struct.point* %d, i32* %x1
  NoAlias:	i32* %x1, i64* %tmp
  NoAlias:	i32* %x, i32* %x1
  NoAlias:	%struct.point* %s, i32* %y
  PartialAlias:	%struct.point* %d, i32* %y
  PartialAlias:	i32* %y, i64* %tmp
  NoAlias:	i32* %x, i32* %y
  NoAlias:	i32* %x1, i32* %y
  PartialAlias:	%struct.point* %s, i32* %y2
  NoAlias:	%struct.point* %d, i32* %y2
  NoAlias:	i32* %y2, i64* %tmp
  NoAlias:	i32* %x, i32* %y2
  NoAlias:	i32* %x1, i32* %y2
  NoAlias:	i32* %y, i32* %y2
Function: main: 6 pointers, 2 call sites
  NoAlias:	%struct.point* %z, i8** %argv
  NoAlias:	i8* %call, i8** %argv
  NoAlias:	%struct.point* %z, i8* %call
  NoAlias:	%struct.point* %tmp, i8** %argv
  NoAlias:	%struct.point* %tmp, %struct.point* %z
  MustAlias:	%struct.point* %tmp, i8* %call
  NoAlias:	i64* %tmp1, i8** %argv
  MustAlias:	%struct.point* %z, i64* %tmp1
  NoAlias:	i64* %tmp1, i8* %call
  NoAlias:	%struct.point* %tmp, i64* %tmp1
  MayAlias:	i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*), i8** %argv
  NoAlias:	%struct.point* %z, i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)
  NoAlias:	i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*), i8* %call
  NoAlias:	%struct.point* %tmp, i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)
  NoAlias:	i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*), i64* %tmp1
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 8) #3
  NoModRef:  Ptr: %struct.point* %z	<->  %call = call noalias i8* @malloc(i64 8) #3
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 8) #3
  Both ModRef:  Ptr: %struct.point* %tmp	<->  %call = call noalias i8* @malloc(i64 8) #3
  NoModRef:  Ptr: i64* %tmp1	<->  %call = call noalias i8* @malloc(i64 8) #3
  Both ModRef:  Ptr: i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)	<->  %call = call noalias i8* @malloc(i64 8) #3
  Both ModRef:  Ptr: i8** %argv	<->  %call1 = call i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)(%struct.point* %tmp, i64 %tmp2)
  NoModRef:  Ptr: %struct.point* %z	<->  %call1 = call i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)(%struct.point* %tmp, i64 %tmp2)
  Both ModRef:  Ptr: i8* %call	<->  %call1 = call i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)(%struct.point* %tmp, i64 %tmp2)
  Both ModRef:  Ptr: %struct.point* %tmp	<->  %call1 = call i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)(%struct.point* %tmp, i64 %tmp2)
  NoModRef:  Ptr: i64* %tmp1	<->  %call1 = call i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)(%struct.point* %tmp, i64 %tmp2)
  Both ModRef:  Ptr: i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)	<->  %call1 = call i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)(%struct.point* %tmp, i64 %tmp2)
  Both ModRef:   %call = call noalias i8* @malloc(i64 8) #3 <->   %call1 = call i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)(%struct.point* %tmp, i64 %tmp2)
  Both ModRef:   %call1 = call i32 (%struct.point*, i64, ...)* bitcast (i32 (...)* @benc_G to i32 (%struct.point*, i64, ...)*)(%struct.point* %tmp, i64 %tmp2) <->   %call = call noalias i8* @malloc(i64 8) #3
===== Alias Analysis Evaluator Report =====
  36 Total Alias Queries Performed
  26 no alias responses (72.2%)
  1 may alias responses (2.7%)
  3 partial alias responses (8.3%)
  6 must alias responses (16.6%)
  Alias Analysis Evaluator Pointer Alias Summary: 72%/2%/8%/16%
  14 Total ModRef Queries Performed
  4 no mod/ref responses (28.5%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  10 mod & ref responses (71.4%)
  Alias Analysis Evaluator Mod/Ref Summary: 28%/0%/0%/71%
Function: bench_H: 4 pointers, 0 call sites
  MayAlias:	i32* %d, i32* %s
  MayAlias:	i32* %arrayidx, i32* %d
  PartialAlias:	i32* %arrayidx, i32* %s
  PartialAlias:	i32* %arrayidx2, i32* %d
  MayAlias:	i32* %arrayidx2, i32* %s
  MayAlias:	i32* %arrayidx, i32* %arrayidx2
Function: main: 5 pointers, 3 call sites
  NoAlias:	i8* %call, i8** %argv
  NoAlias:	i8* %call1, i8** %argv
  NoAlias:	i8* %call, i8* %call1
  MayAlias:	i32* %tmp2, i8** %argv
  MayAlias:	i32* %tmp2, i8* %call
  MayAlias:	i32* %tmp2, i8* %call1
  MayAlias:	i32* %tmp3, i8** %argv
  MayAlias:	i32* %tmp3, i8* %call
  MayAlias:	i32* %tmp3, i8* %call1
  MayAlias:	i32* %tmp2, i32* %tmp3
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call1	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32* %tmp2	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32* %tmp3	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8** %argv	<->  %call1 = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call	<->  %call1 = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call1	<->  %call1 = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32* %tmp2	<->  %call1 = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32* %tmp3	<->  %call1 = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8** %argv	<->  call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc)
  Both ModRef:  Ptr: i8* %call	<->  call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc)
  Both ModRef:  Ptr: i8* %call1	<->  call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc)
  Both ModRef:  Ptr: i32* %tmp2	<->  call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc)
  Both ModRef:  Ptr: i32* %tmp3	<->  call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc)
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #2 <->   %call1 = call noalias i8* @malloc(i64 400) #2
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #2 <->   call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc)
  Both ModRef:   %call1 = call noalias i8* @malloc(i64 400) #2 <->   %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:   %call1 = call noalias i8* @malloc(i64 400) #2 <->   call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc)
  Both ModRef:   call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc) <->   %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:   call void @bench_H(i32* %tmp2, i32* %tmp3, i32 %argc) <->   %call1 = call noalias i8* @malloc(i64 400) #2
===== Alias Analysis Evaluator Report =====
  16 Total Alias Queries Performed
  3 no alias responses (18.7%)
  11 may alias responses (68.7%)
  2 partial alias responses (12.5%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 18%/68%/12%/0%
  21 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  21 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
Function: bench_I: 7 pointers, 0 call sites
  PartialAlias:	i32** %arrayidx, i32** %v
  MayAlias:	i32* %tmp, i32** %v
  MayAlias:	i32* %tmp, i32** %arrayidx
  PartialAlias:	i32** %arrayidx2, i32** %v
  NoAlias:	i32** %arrayidx, i32** %arrayidx2
  MayAlias:	i32* %tmp, i32** %arrayidx2
  MayAlias:	i32* %tmp1, i32** %v
  MayAlias:	i32* %tmp1, i32** %arrayidx
  MayAlias:	i32* %tmp, i32* %tmp1
  MayAlias:	i32* %tmp1, i32** %arrayidx2
  MayAlias:	i32* %arrayidx7, i32** %v
  MayAlias:	i32* %arrayidx7, i32** %arrayidx
  MayAlias:	i32* %arrayidx7, i32* %tmp
  MayAlias:	i32* %arrayidx7, i32** %arrayidx2
  PartialAlias:	i32* %arrayidx7, i32* %tmp1
  MayAlias:	i32* %arrayidx9, i32** %v
  MayAlias:	i32* %arrayidx9, i32** %arrayidx
  PartialAlias:	i32* %arrayidx9, i32* %tmp
  MayAlias:	i32* %arrayidx9, i32** %arrayidx2
  MayAlias:	i32* %arrayidx9, i32* %tmp1
  MayAlias:	i32* %arrayidx7, i32* %arrayidx9
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i32** %tmp1, i8** %argv
  MayAlias:	i32** %tmp1, i8* %call
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i32** %tmp1	<->  %call = call noalias i8* @malloc(i64 400) #2
  Both ModRef:  Ptr: i8** %argv	<->  call void @bench_I(i32** %tmp1, i32 %argc)
  Both ModRef:  Ptr: i8* %call	<->  call void @bench_I(i32** %tmp1, i32 %argc)
  Both ModRef:  Ptr: i32** %tmp1	<->  call void @bench_I(i32** %tmp1, i32 %argc)
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #2 <->   call void @bench_I(i32** %tmp1, i32 %argc)
  Both ModRef:   call void @bench_I(i32** %tmp1, i32 %argc) <->   %call = call noalias i8* @malloc(i64 400) #2
===== Alias Analysis Evaluator Report =====
  24 Total Alias Queries Performed
  2 no alias responses (8.3%)
  18 may alias responses (75.0%)
  4 partial alias responses (16.6%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 8%/75%/16%/0%
  8 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  8 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
Function: bench_J: 4 pointers, 0 call sites
  PartialAlias:	i8* %arrayidx, i8* %p
  PartialAlias:	i8* %arrayidx2, i8* %p
  PartialAlias:	i8* %arrayidx, i8* %arrayidx2
  PartialAlias:	i8* %arrayidx8, i8* %p
  PartialAlias:	i8* %arrayidx, i8* %arrayidx8
  PartialAlias:	i8* %arrayidx2, i8* %arrayidx8
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i8* %tmp1, i8** %argv
  MayAlias:	i8* %call, i8* %tmp1
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 100) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 100) #2
  Both ModRef:  Ptr: i8* %tmp1	<->  %call = call noalias i8* @malloc(i64 100) #2
  Both ModRef:  Ptr: i8** %argv	<->  call void @bench_J(i8* %tmp1)
  Both ModRef:  Ptr: i8* %call	<->  call void @bench_J(i8* %tmp1)
  Both ModRef:  Ptr: i8* %tmp1	<->  call void @bench_J(i8* %tmp1)
  Both ModRef:   %call = call noalias i8* @malloc(i64 100) #2 <->   call void @bench_J(i8* %tmp1)
  Both ModRef:   call void @bench_J(i8* %tmp1) <->   %call = call noalias i8* @malloc(i64 100) #2
===== Alias Analysis Evaluator Report =====
  9 Total Alias Queries Performed
  1 no alias responses (11.1%)
  2 may alias responses (22.2%)
  6 partial alias responses (66.6%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 11%/22%/66%/0%
  8 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  8 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
Function: bench_K: 7 pointers, 2 call sites
  NoAlias:	i8* %call, i8* %v
  NoAlias:	i8* %call1, i8* %v
  NoAlias:	i8* %call, i8* %call1
  PartialAlias:	i8* %arrayidx, i8* %v
  NoAlias:	i8* %arrayidx, i8* %call
  NoAlias:	i8* %arrayidx, i8* %call1
  NoAlias:	i8* %arrayidx3, i8* %v
  PartialAlias:	i8* %arrayidx3, i8* %call
  NoAlias:	i8* %arrayidx3, i8* %call1
  NoAlias:	i8* %arrayidx, i8* %arrayidx3
  PartialAlias:	i8* %arrayidx6, i8* %v
  NoAlias:	i8* %arrayidx6, i8* %call
  NoAlias:	i8* %arrayidx6, i8* %call1
  PartialAlias:	i8* %arrayidx, i8* %arrayidx6
  NoAlias:	i8* %arrayidx3, i8* %arrayidx6
  NoAlias:	i8* %arrayidx8, i8* %v
  NoAlias:	i8* %arrayidx8, i8* %call
  PartialAlias:	i8* %arrayidx8, i8* %call1
  NoAlias:	i8* %arrayidx, i8* %arrayidx8
  NoAlias:	i8* %arrayidx3, i8* %arrayidx8
  NoAlias:	i8* %arrayidx6, i8* %arrayidx8
  Both ModRef:  Ptr: i8* %v	<->  %call = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 10) #2
  NoModRef:  Ptr: i8* %call1	<->  %call = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %arrayidx	<->  %call = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %arrayidx3	<->  %call = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %arrayidx6	<->  %call = call noalias i8* @malloc(i64 10) #2
  NoModRef:  Ptr: i8* %arrayidx8	<->  %call = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %v	<->  %call1 = call noalias i8* @malloc(i64 10) #2
  NoModRef:  Ptr: i8* %call	<->  %call1 = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %call1	<->  %call1 = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %arrayidx	<->  %call1 = call noalias i8* @malloc(i64 10) #2
  NoModRef:  Ptr: i8* %arrayidx3	<->  %call1 = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %arrayidx6	<->  %call1 = call noalias i8* @malloc(i64 10) #2
  Both ModRef:  Ptr: i8* %arrayidx8	<->  %call1 = call noalias i8* @malloc(i64 10) #2
  Both ModRef:   %call = call noalias i8* @malloc(i64 10) #2 <->   %call1 = call noalias i8* @malloc(i64 10) #2
  Both ModRef:   %call1 = call noalias i8* @malloc(i64 10) #2 <->   %call = call noalias i8* @malloc(i64 10) #2
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i8* %tmp1, i8** %argv
  MayAlias:	i8* %call, i8* %tmp1
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 100) #2
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 100) #2
  Both ModRef:  Ptr: i8* %tmp1	<->  %call = call noalias i8* @malloc(i64 100) #2
  Both ModRef:  Ptr: i8** %argv	<->  call void @bench_K(i8* %tmp1)
  Both ModRef:  Ptr: i8* %call	<->  call void @bench_K(i8* %tmp1)
  Both ModRef:  Ptr: i8* %tmp1	<->  call void @bench_K(i8* %tmp1)
  Both ModRef:   %call = call noalias i8* @malloc(i64 100) #2 <->   call void @bench_K(i8* %tmp1)
  Both ModRef:   call void @bench_K(i8* %tmp1) <->   %call = call noalias i8* @malloc(i64 100) #2
===== Alias Analysis Evaluator Report =====
  24 Total Alias Queries Performed
  17 no alias responses (70.8%)
  2 may alias responses (8.3%)
  5 partial alias responses (20.8%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 70%/8%/20%/0%
  24 Total ModRef Queries Performed
  4 no mod/ref responses (16.6%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  20 mod & ref responses (83.3%)
  Alias Analysis Evaluator Mod/Ref Summary: 16%/0%/0%/83%
Function: bench_L: 10 pointers, 0 call sites
  NoAlias:	i32* %add.ptr, i32* %v
  NoAlias:	i32* %add.ptr1, i32* %v
  NoAlias:	i32* %add.ptr, i32* %add.ptr1
  MayAlias:	i32* %i.0, i32* %v
  MayAlias:	i32* %add.ptr, i32* %i.0
  MayAlias:	i32* %add.ptr1, i32* %i.0
  MayAlias:	i32* %incdec.ptr, i32* %v
  MayAlias:	i32* %add.ptr, i32* %incdec.ptr
  MayAlias:	i32* %add.ptr1, i32* %incdec.ptr
  NoAlias:	i32* %i.0, i32* %incdec.ptr
  MayAlias:	i32* %SSIfy_sigma, i32* %v
  MayAlias:	i32* %SSIfy_sigma, i32* %add.ptr
  MayAlias:	i32* %SSIfy_sigma, i32* %add.ptr1
  MayAlias:	i32* %SSIfy_sigma, i32* %i.0
  MayAlias:	i32* %SSIfy_sigma, i32* %incdec.ptr
  MayAlias:	i32* %SSIfy_sigma3, i32* %v
  MayAlias:	i32* %SSIfy_sigma3, i32* %add.ptr
  MayAlias:	i32* %SSIfy_sigma3, i32* %add.ptr1
  MayAlias:	i32* %SSIfy_sigma3, i32* %i.0
  MayAlias:	i32* %SSIfy_sigma3, i32* %incdec.ptr
  MayAlias:	i32* %SSIfy_sigma, i32* %SSIfy_sigma3
  MayAlias:	i32* %i.1, i32* %v
  MayAlias:	i32* %add.ptr, i32* %i.1
  MayAlias:	i32* %add.ptr1, i32* %i.1
  MayAlias:	i32* %i.0, i32* %i.1
  MayAlias:	i32* %i.1, i32* %incdec.ptr
  MayAlias:	i32* %SSIfy_sigma, i32* %i.1
  MayAlias:	i32* %SSIfy_sigma3, i32* %i.1
  MayAlias:	i32* %incdec.ptr5, i32* %v
  MayAlias:	i32* %add.ptr, i32* %incdec.ptr5
  MayAlias:	i32* %add.ptr1, i32* %incdec.ptr5
  MayAlias:	i32* %i.0, i32* %incdec.ptr5
  MayAlias:	i32* %incdec.ptr, i32* %incdec.ptr5
  MayAlias:	i32* %SSIfy_sigma, i32* %incdec.ptr5
  MayAlias:	i32* %SSIfy_sigma3, i32* %incdec.ptr5
  NoAlias:	i32* %i.1, i32* %incdec.ptr5
  MayAlias:	i32* %SSIfy_sigma5, i32* %v
  MayAlias:	i32* %SSIfy_sigma5, i32* %add.ptr
  MayAlias:	i32* %SSIfy_sigma5, i32* %add.ptr1
  MayAlias:	i32* %SSIfy_sigma5, i32* %i.0
  MayAlias:	i32* %SSIfy_sigma5, i32* %incdec.ptr
  MayAlias:	i32* %SSIfy_sigma, i32* %SSIfy_sigma5
  MayAlias:	i32* %SSIfy_sigma3, i32* %SSIfy_sigma5
  MayAlias:	i32* %SSIfy_sigma5, i32* %i.1
  MayAlias:	i32* %SSIfy_sigma5, i32* %incdec.ptr5
Function: main: 3 pointers, 2 call sites
  NoAlias:	i8* %call, i8** %argv
  MayAlias:	i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*), i8** %argv
  NoAlias:	i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*), i8* %call
  Both ModRef:  Ptr: i8** %argv	<->  %call = call noalias i8* @malloc(i64 400) #3
  Both ModRef:  Ptr: i8* %call	<->  %call = call noalias i8* @malloc(i64 400) #3
  Both ModRef:  Ptr: i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*)	<->  %call = call noalias i8* @malloc(i64 400) #3
  Both ModRef:  Ptr: i8** %argv	<->  %call1 = call i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*)(i32 %tmp)
  Both ModRef:  Ptr: i8* %call	<->  %call1 = call i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*)(i32 %tmp)
  Both ModRef:  Ptr: i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*)	<->  %call1 = call i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*)(i32 %tmp)
  Both ModRef:   %call = call noalias i8* @malloc(i64 400) #3 <->   %call1 = call i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*)(i32 %tmp)
  Both ModRef:   %call1 = call i32 (i32, ...)* bitcast (i32 (...)* @benc_L to i32 (i32, ...)*)(i32 %tmp) <->   %call = call noalias i8* @malloc(i64 400) #3
===== Alias Analysis Evaluator Report =====
  48 Total Alias Queries Performed
  7 no alias responses (14.5%)
  41 may alias responses (85.4%)
  0 partial alias responses (0.0%)
  0 must alias responses (0.0%)
  Alias Analysis Evaluator Pointer Alias Summary: 14%/85%/0%/0%
  8 Total ModRef Queries Performed
  0 no mod/ref responses (0.0%)
  0 mod responses (0.0%)
  0 ref responses (0.0%)
  8 mod & ref responses (100.0%)
  Alias Analysis Evaluator Mod/Ref Summary: 0%/0%/0%/100%
